diff --git a/lib/libalpm/add.c b/lib/libalpm/add.c
index f806e5b..fcd1bfc 100644
--- a/lib/libalpm/add.c
+++ b/lib/libalpm/add.c
@@ -115,8 +115,7 @@ static int perform_extraction(alpm_handle_t *handle, struct archive *archive,
 {
 	int ret;
 	struct archive *archive_writer;
-	const int archive_flags = ARCHIVE_EXTRACT_OWNER |
-	                          ARCHIVE_EXTRACT_PERM |
+	const int archive_flags = ARCHIVE_EXTRACT_PERM |
 	                          ARCHIVE_EXTRACT_TIME |
 	                          ARCHIVE_EXTRACT_UNLINK |
 	                          ARCHIVE_EXTRACT_XATTR |
diff --git a/lib/libalpm/util.c b/lib/libalpm/util.c
index 299d287..90ae42c 100644
--- a/lib/libalpm/util.c
+++ b/lib/libalpm/util.c
@@ -475,6 +475,12 @@ static int _alpm_chroot_write_to_child(alpm_handle_t *handle, int fd,
 		}
 	}
 
+#if defined(__APPLE__)
+#ifndef MSG_NOSIGNAL
+#define MSG_NOSIGNAL SO_NOSIGPIPE
+#endif
+#endif
+
 	nwrite = send(fd, buf, *buf_size, MSG_NOSIGNAL);
 
 	if(nwrite != -1) {
diff --git a/meson.build b/meson.build
index 76b9d2a..673324c 100644
--- a/meson.build
+++ b/meson.build
@@ -41,12 +41,7 @@ if not have_bash
   error('bash >= 4.4.0 is required for pacman scripts.')
 endif
 
-bashcompletion = dependency('bash-completion', required : false)
-if bashcompletion.found()
-  BASHCOMPDIR = bashcompletion.get_pkgconfig_variable('completionsdir')
-else
-  BASHCOMPDIR = join_paths(DATAROOTDIR, 'bash-completion/completions')
-endif
+BASHCOMPDIR = join_paths(DATAROOTDIR, 'bash-completion/completions')
 
 if get_option('use-git-version')
   PACKAGE_VERSION = run_command(
@@ -175,7 +170,8 @@ foreach type : [
   endif
 endforeach
 
-if conf.has('HAVE_STRUCT_STATVFS_F_FLAG')
+os = host_machine.system()
+if conf.has('HAVE_STRUCT_STATVFS_F_FLAG') and not os.startswith('darwin')
   conf.set('FSSTATSTYPE', 'struct statvfs')
 elif conf.has('HAVE_STRUCT_STATFS_F_FLAGS')
   conf.set('FSSTATSTYPE', 'struct statfs')
@@ -235,7 +231,6 @@ if file_seccomp.enabled() or ( file_seccomp.auto() and filever.version_compare('
   filecmd = 'file -S'
 endif
 
-os = host_machine.system()
 if os.startswith('darwin')
   inodecmd = '/usr/bin/stat -f \'%i %N\''
   strip_binaries = ''
diff --git a/scripts/libmakepkg/executable/strip.sh.in b/scripts/libmakepkg/executable/strip.sh.in
index d4d53b9..5226fce 100644
--- a/scripts/libmakepkg/executable/strip.sh.in
+++ b/scripts/libmakepkg/executable/strip.sh.in
@@ -30,8 +30,8 @@ executable_functions+=('executable_strip')
 
 executable_strip() {
 	if check_option "strip" "y"; then
-		if ! type -p strip >/dev/null; then
-			error "$(gettext "Cannot find the %s binary required for object file stripping.")" "strip"
+		if ! type -p psp-strip >/dev/null; then
+			error "$(gettext "Cannot find the %s binary required for object file stripping.")" "psp-strip"
 			return 1
 		fi
 	fi
diff --git a/scripts/libmakepkg/tidy/strip.sh.in b/scripts/libmakepkg/tidy/strip.sh.in
index 9660253..5c52ee0 100644
--- a/scripts/libmakepkg/tidy/strip.sh.in
+++ b/scripts/libmakepkg/tidy/strip.sh.in
@@ -97,7 +97,7 @@ strip_file() {
 	fi
 
 	local tempfile=$(mktemp "$binary.XXXXXX")
-	if strip "$@" "$binary" -o "$tempfile"; then
+	if psp-strip "$@" "$binary" -o "$tempfile"; then
 		cat "$tempfile" > "$binary"
 	fi
 	rm -f "$tempfile"
@@ -107,7 +107,7 @@ strip_lto() {
 	local binary=$1;
 
 	local tempfile=$(mktemp "$binary.XXXXXX")
-	if strip -R .gnu.lto_* -R .gnu.debuglto_* -N __gnu_lto_v1 "$binary" -o "$tempfile"; then
+	if psp-strip -R .gnu.lto_* -R .gnu.debuglto_* -N __gnu_lto_v1 "$binary" -o "$tempfile"; then
 		cat "$tempfile" > "$binary"
 	fi
 	rm -f "$tempfile"
diff --git a/scripts/makepkg.sh.in b/scripts/makepkg.sh.in
index e58edfa..03a9709 100644
--- a/scripts/makepkg.sh.in
+++ b/scripts/makepkg.sh.in
@@ -231,17 +231,6 @@ run_pacman() {
 	else
 		cmd=("$PACMAN_PATH" "${PACMAN_OPTS[@]}" "$@")
 		cmdescape="$(printf '%q ' "${cmd[@]}")"
-		if (( ${#PACMAN_AUTH[@]} )); then
-			if in_array '%c' "${PACMAN_AUTH[@]}"; then
-				cmd=("${PACMAN_AUTH[@]/\%c/$cmdescape}")
-			else
-				cmd=("${PACMAN_AUTH[@]}" "${cmd[@]}")
-			fi
-		elif type -p sudo >/dev/null; then
-			cmd=(sudo "${cmd[@]}")
-		else
-			cmd=(su root -c "$cmdescape")
-		fi
 		local lockfile="$(pacman-conf DBPath)/db.lck"
 		while [[ -f $lockfile ]]; do
 			local timer=0
diff --git a/src/pacman/pacman.c b/src/pacman/pacman.c
index e398855..15b00de 100644
--- a/src/pacman/pacman.c
+++ b/src/pacman/pacman.c
@@ -1131,7 +1131,8 @@ int main(int argc, char *argv[])
 	}
 
 	/* check if we have sufficient permission for the requested operation */
-	if(myuid > 0 && needs_root()) {
+	/* pspdev: since we always force a root dir, check write access */
+	if(myuid > 0 && needs_root() && (access(config->rootdir, W_OK) != 0)) {
 		pm_printf(ALPM_LOG_ERROR, _("you cannot perform this operation unless you are root.\n"));
 		cleanup(EXIT_FAILURE);
 	}
diff --git a/scripts/libmakepkg/lint_package/dotfiles.sh.in b/scripts/libmakepkg/lint_package/dotfiles.sh.in
index 0b993dd4..4c447bd0 100644
--- a/scripts/libmakepkg/lint_package/dotfiles.sh.in
+++ b/scripts/libmakepkg/lint_package/dotfiles.sh.in
@@ -34,6 +34,7 @@ check_dotfiles() {
 	shopt -s nullglob
 
 	for f in "$pkgdir"/.*; do
+		[[ -e "${f}" ]] || continue
 		[[ ${f##*/} == . || ${f##*/} == .. ]] && continue
 		error "$(gettext "Dotfile found in package root '%s'")" "$f"
 		ret=1
